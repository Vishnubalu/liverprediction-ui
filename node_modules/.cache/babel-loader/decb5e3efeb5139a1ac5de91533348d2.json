{"ast":null,"code":"var _jsxFileName = \"D:\\\\python\\\\virtusa_frontend\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport BasicTextFields from './InputBox';\nimport ButtonAppBar from \"./appbar\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport RadioButtonsGroup from \"./radiobuttons\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    // backgroundColor: \"#ff1133\",\n    border: \"2px solid blue\",\n    backgroundColor: \"#ffffff\",\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: \"22%\",\n    shadowBlur: \"#2224FF\",\n    marginTop: \"5%\",\n    marginBottom: \"5%\",\n    marginRight: \"22%\",\n    borderRadius: 20,\n    padding: 30\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n  const state = data;\n  const [age, setAge] = useState(\"\");\n  const [Total_Bilirubin, setTotal_Bilirubin] = useState(\"\");\n  const [Direct_Bilirubin, setDirect_Bilirubin] = useState(\"\");\n  const [Alkaline_Phosphotase, setAlkaline_Phosphotase] = useState(\"\");\n  const [Alamine_Aminotransferase, setAlamine_Aminotransferase] = useState(\"\");\n  const [Aspartate_Aminotransferase, setAspartate_Aminotransferase] = useState(\"\");\n  const [Total_Protiens, setTotal_Protiens] = useState(\"\");\n  const [Albumin, setAlbumin] = useState(\"\");\n  const [Albumin_and_Globulin_Ratio, setAlbumin_and_Globulin_Ratio] = useState(\"\");\n\n  async function getsymtoms(key) {\n    console.log(key.target.value);\n    console.log(state[key.target.id]);\n    console.log(state);\n  }\n\n  async function getcolnames() {\n    const response = await fetch('http://127.0.0.1:8000/symptoms/', {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    setData(json['symptoms']);\n    console.log(json['symptoms']);\n  } //console.log(age);\n\n\n  useEffect(() => {\n    // GET request using fetch inside useEffect React hook\n    getcolnames();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonAppBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    className: classes.root,\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RadioButtonsGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(BasicTextFields, {\n    label: data,\n    getdata: getsymtoms,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"SUBMIT\")));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/python/virtusa_frontend/src/App.js"],"names":["React","useEffect","useState","BasicTextFields","ButtonAppBar","Box","makeStyles","createStyles","Button","RadioButtonsGroup","useStyles","theme","root","border","backgroundColor","display","alignItems","justifyContent","marginLeft","shadowBlur","marginTop","marginBottom","marginRight","borderRadius","padding","App","classes","data","setData","state","age","setAge","Total_Bilirubin","setTotal_Bilirubin","Direct_Bilirubin","setDirect_Bilirubin","Alkaline_Phosphotase","setAlkaline_Phosphotase","Alamine_Aminotransferase","setAlamine_Aminotransferase","Aspartate_Aminotransferase","setAspartate_Aminotransferase","Total_Protiens","setTotal_Protiens","Albumin","setAlbumin","Albumin_and_Globulin_Ratio","setAlbumin_and_Globulin_Ratio","getsymtoms","key","console","log","target","value","id","getcolnames","response","fetch","method","headers","json"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport BasicTextFields from './InputBox'\nimport ButtonAppBar from \"./appbar\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport RadioButtonsGroup from \"./radiobuttons\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n  root: {\n    // backgroundColor: \"#ff1133\",\n      border:\"2px solid blue\",\n      backgroundColor:\"#ffffff\",\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginLeft:\"22%\",\n      shadowBlur:\"#2224FF\",\n      marginTop:\"5%\",\n      marginBottom:\"5%\",\n      marginRight:\"22%\",\n      borderRadius:20,\n      padding: 30,\n  },\n}));\n\nfunction App() {\n\n    const classes = useStyles();\n    const [data, setData] = useState([]);\n\n\n    const state = data;\n\n    const [age, setAge] = useState(\"\");\n  const [Total_Bilirubin, setTotal_Bilirubin] = useState(\"\");\n  const [Direct_Bilirubin, setDirect_Bilirubin] = useState(\"\");\n  const [Alkaline_Phosphotase, setAlkaline_Phosphotase] = useState(\"\");\n  const [Alamine_Aminotransferase, setAlamine_Aminotransferase] = useState(\"\");\n  const [Aspartate_Aminotransferase, setAspartate_Aminotransferase] = useState(\"\");\n  const [Total_Protiens, setTotal_Protiens] = useState(\"\");\n  const [Albumin, setAlbumin] = useState(\"\");\n  const [Albumin_and_Globulin_Ratio, setAlbumin_and_Globulin_Ratio] = useState(\"\");\n\n\n\n     async function getsymtoms(key) {\n         console.log(key.target.value);\n         console.log(state[key.target.id])\n         console.log(state)\n    }\n\n\n\n    async function getcolnames() {\n        const response = await fetch('http://127.0.0.1:8000/symptoms/',\n            {\n\n                method: \"GET\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n        const json = await response.json();\n        setData(json['symptoms']);\n        console.log(json['symptoms'])\n    }\n    //console.log(age);\n\n    useEffect(() => {\n        // GET request using fetch inside useEffect React hook\n        getcolnames()\n    }, []);\n\n\n    return (\n        <div className=\"App\">\n            <div>\n                <ButtonAppBar/>\n            </div>\n                <Box display=\"flex\" className={classes.root} flexWrap=\"wrap\">\n                    <RadioButtonsGroup />\n                    <BasicTextFields label={data} getdata = {getsymtoms}/>\n                    <Button variant=\"contained\" color=\"primary\" >SUBMIT</Button>\n                </Box>\n\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}