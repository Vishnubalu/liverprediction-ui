{"ast":null,"code":"var _jsxFileName = \"D:\\\\python\\\\virtusa_frontend\\\\src\\\\App.js\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport CSVReader from \"react-csv-reader\";\nimport './App.css';\nimport BasicTextFields from './InputBox';\nimport ButtonAppBar from \"./appbar\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport RadioButtonsGroup from \"./radiobuttons\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport IconLabelButtons from \"./uploadicon\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    // backgroundColor: \"#ff1133\",\n    border: \"2px solid blue\",\n    minWidth: \"27ch\",\n    backgroundColor: \"#ffffff\",\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: \"20%\",\n    shadowBlur: \"#2224FF\",\n    marginTop: \"5%\",\n    marginBottom: \"5%\",\n    marginRight: \"20%\",\n    borderRadius: 20,\n    padding: 30\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState([]);\n  const [er, setError] = useState({});\n  const [formState, setFormState] = useState({});\n  const [csvdata, setCSV] = useState('');\n  const [open, setOpen] = React.useState(false);\n\n  const handleForce = (data, fileInfo) => setCSV(data); // const [disabled, setDisable] = useState(true);\n\n\n  const Transition = React.forwardRef(function Transition(props, ref) {\n    return /*#__PURE__*/React.createElement(Slide, Object.assign({\n      direction: \"up\",\n      ref: ref\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }\n    }));\n  });\n  const papaparseOptions = {\n    header: true,\n    dynamicTyping: true,\n    skipEmptyLines: true,\n    transformHeader: header => header.toLowerCase().replace(/\\W/g, \"_\")\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function getsymtoms(key) {\n    const newErrors = { ...er\n    };\n    const newFormState = { ...formState\n    };\n    const decimal = /^[-+]?[0-9]+\\.[0-9]+$/;\n    const numbers = /^[0-9]+$/;\n\n    if (key.target.value.match(numbers) || key.target.value.match(decimal)) {\n      newErrors[key.target.id] = false;\n    } else {\n      newErrors[key.target.id] = true;\n    }\n\n    newFormState[key.target.id] = key.target.value;\n    setFormState(newFormState);\n    setError(newErrors); //console.log(\"updating ---\" + JSON.stringify(formState));\n  }\n\n  async function getGender(key) {\n    const newFormState = { ...formState\n    };\n    newFormState[\"Gender\"] = key.target.value;\n    setFormState(newFormState);\n  } // GET request using fetch inside useEffect React hook\n\n\n  async function getcolnames() {\n    const response = await fetch('http://127.0.0.1:8000/symptoms/', {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    setData(json['symptoms']);\n    const formData = json['symptoms'].reduce(function (map, obj) {\n      map[obj] = \"\";\n      return map;\n    }, {});\n    setFormState(formData);\n  }\n\n  useEffect(() => {\n    // GET request using fetch inside useEffect React hook\n    getcolnames();\n  }, []);\n\n  async function downloadSampleData() {\n    fetch('http://127.0.0.1:8000/download/').then(response => {\n      response.blob().then(blob => {\n        let url = window.URL.createObjectURL(blob);\n        let a = document.createElement('a');\n        a.href = url; // a.download = 'employees.json';\n        // a.click();\n      });\n      window.location.href = response.url;\n    });\n  }\n\n  ; // POST request\n\n  async function postUserToapi() {\n    const response = await fetch('http://127.0.0.1:8000/predictdisease/', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      \"symptoms\": formState\n    }).then(response => response.json()).catch(error => error);\n    console.log(response); // var obj = JSON.parse(response);\n    // setValue(obj[\"messege\"]);\n\n    setOpen(true);\n  }\n\n  async function PostCSVtoAPI() {\n    // const csrf = this.getCookie('csrftoken');\n    const response = await fetch('http://127.0.0.1:8000/upload/', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      body: JSON.stringify({\n        \"data\": csvdata\n      })\n    }).then(response => response.json()).catch(error => error);\n  } // async function CSVdata(files) {\n  //     console.log(files.fileList);\n  //\n  // //     var reader = new FileReader();\n  // // reader.onload = function(file) {\n  // //     // Use reader.result\n  // //     alert(reader.result)\n  // // };\n  // // reader.readAsText(files[0]);\n  //     // console.log(formData.get('file'))\n  // }\n\n\n  async function userData() {\n    const numbers = /^[0-9]+$/;\n    const decimal = /^[-+]?[0-9]+\\.[0-9]+$/;\n\n    for (const [key, input] of Object.entries(formState)) {\n      if (input == \"\" || !input.match(numbers) && !input.match(decimal)) {\n        return 0;\n      }\n    }\n\n    postUserToapi();\n  }\n\n  async function postApi() {\n    if (csvdata != '') {\n      console.log(\"csvdata\" + csvdata);\n      PostCSVtoAPI();\n    } else {\n      userData();\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonAppBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconLabelButtons, {\n    func: downloadSampleData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CSVReader, {\n    cssClass: \"react-csv-input\",\n    label: \"select .csv with liver disease symptoms: \",\n    onFileLoaded: handleForce,\n    parserOptions: papaparseOptions,\n    inputStyle: {\n      opacity: 1,\n      width: '170px',\n      color: 'blue'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, \"select csv file or enter values manually and submit\")), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    className: classes.root,\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RadioButtonsGroup, {\n    clicked: getGender,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(BasicTextFields, {\n    label: data,\n    getdata: getsymtoms,\n    error: er,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: postApi,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, \"SUBMIT\")), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-slide-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, \"THANKS FOR USING OUR SITE\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"alert-dialog-slide-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, value)), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }, \"okay\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/python/virtusa_frontend/src/App.js"],"names":["React","useEffect","useMemo","useState","CSVReader","BasicTextFields","ButtonAppBar","Box","makeStyles","createStyles","Button","RadioButtonsGroup","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","IconLabelButtons","useStyles","theme","root","border","minWidth","backgroundColor","display","alignItems","justifyContent","marginLeft","shadowBlur","marginTop","marginBottom","marginRight","borderRadius","padding","App","classes","data","setData","value","setValue","er","setError","formState","setFormState","csvdata","setCSV","open","setOpen","handleForce","fileInfo","Transition","forwardRef","props","ref","papaparseOptions","header","dynamicTyping","skipEmptyLines","transformHeader","toLowerCase","replace","handleClose","getsymtoms","key","newErrors","newFormState","decimal","numbers","target","match","id","getGender","getcolnames","response","fetch","method","headers","json","formData","reduce","map","obj","downloadSampleData","then","blob","url","window","URL","createObjectURL","a","document","createElement","href","location","postUserToapi","catch","error","console","log","PostCSVtoAPI","body","JSON","stringify","userData","input","Object","entries","postApi","opacity","width","color"],"mappings":"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","sourcesContent":["import React, {useEffect, useMemo, useState} from 'react';\nimport CSVReader from \"react-csv-reader\";\nimport './App.css';\nimport BasicTextFields from './InputBox'\nimport ButtonAppBar from \"./appbar\";\nimport Box from \"@material-ui/core/Box\";\nimport {makeStyles, createStyles} from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport RadioButtonsGroup from \"./radiobuttons\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport IconLabelButtons from \"./uploadicon\";\n\n\nconst useStyles = makeStyles((theme) => createStyles({\n    root: {\n        // backgroundColor: \"#ff1133\",\n        border: \"2px solid blue\",\n        minWidth: \"27ch\",\n        backgroundColor: \"#ffffff\",\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginLeft: \"20%\",\n        shadowBlur: \"#2224FF\",\n        marginTop: \"5%\",\n        marginBottom: \"5%\",\n        marginRight: \"20%\",\n        borderRadius: 20,\n        padding: 30,\n    },\n\n}));\n\n\n\nfunction App() {\n\n\n    const classes = useStyles();\n    const [data, setData] = useState([]);\n    const [value, setValue] = useState([]);\n    const [er, setError] = useState({});\n    const [formState, setFormState] = useState({});\n    const [csvdata, setCSV] = useState('');\n    const [open, setOpen] = React.useState(false);\n    const handleForce = (data, fileInfo) => setCSV(data);\n\n    // const [disabled, setDisable] = useState(true);\n\n    const Transition = React.forwardRef(function Transition(props, ref) {\n        return <Slide direction=\"up\" ref={ref} {...props} />;\n    });\n\n    const papaparseOptions = {\n        header: true,\n        dynamicTyping: true,\n        skipEmptyLines: true,\n        transformHeader: header => header.toLowerCase().replace(/\\W/g, \"_\")\n    };\n\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    function getsymtoms(key) {\n        const newErrors = {...er};\n        const newFormState = {...formState};\n        const decimal = /^[-+]?[0-9]+\\.[0-9]+$/;\n        const numbers = /^[0-9]+$/;\n        if (key.target.value.match(numbers) || key.target.value.match(decimal)) {\n            newErrors[key.target.id] = false;\n        } else {\n            newErrors[key.target.id] = true;\n        }\n        newFormState[key.target.id] = key.target.value;\n        setFormState(newFormState);\n        setError(newErrors);\n        //console.log(\"updating ---\" + JSON.stringify(formState));\n    }\n\n\n    async function getGender(key) {\n        const newFormState = {...formState};\n        newFormState[\"Gender\"] = key.target.value;\n        setFormState(newFormState);\n    }\n\n\n    // GET request using fetch inside useEffect React hook\n    async function getcolnames() {\n        const response = await fetch('http://127.0.0.1:8000/symptoms/',\n            {\n\n                method: \"GET\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n        const json = await response.json();\n        setData(json['symptoms']);\n        const formData = json['symptoms'].reduce(function (map, obj) {\n            map[obj] = \"\";\n            return map;\n        }, {});\n        setFormState(formData)\n    }\n\n\n    useEffect(() => {\n        // GET request using fetch inside useEffect React hook\n        getcolnames();\n\n    }, []);\n\n    async function downloadSampleData() {\n        fetch('http://127.0.0.1:8000/download/')\n            .then(response => {\n                response.blob().then(blob => {\n                    let url = window.URL.createObjectURL(blob);\n                    let a = document.createElement('a');\n                    a.href = url;\n                    // a.download = 'employees.json';\n                    // a.click();\n                });\n                window.location.href = response.url;\n            });\n    };\n\n    // POST request\n    async function postUserToapi() {\n\n        const response = await fetch('http://127.0.0.1:8000/predictdisease/',\n            {\n\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                \"symptoms\" : formState,\n\n            }).then(response => response.json())\n            .catch(error => error);\n        console.log(response)\n        // var obj = JSON.parse(response);\n        // setValue(obj[\"messege\"]);\n        setOpen(true);\n    }\n\n    async function PostCSVtoAPI() {\n        // const csrf = this.getCookie('csrftoken');\n        const response = await fetch('http://127.0.0.1:8000/upload/', {\n            method: \"POST\",\n            headers: {'Content-Type': 'multipart/form-data'},\n            body: JSON.stringify({\n                \"data\": csvdata\n            })\n        })\n            .then(response => response.json())\n            .catch(error => error);\n    }\n\n    // async function CSVdata(files) {\n    //     console.log(files.fileList);\n    //\n    // //     var reader = new FileReader();\n    // // reader.onload = function(file) {\n    // //     // Use reader.result\n    // //     alert(reader.result)\n    // // };\n    // // reader.readAsText(files[0]);\n    //     // console.log(formData.get('file'))\n    // }\n\n\n    async function userData() {\n        const numbers = /^[0-9]+$/;\n        const decimal = /^[-+]?[0-9]+\\.[0-9]+$/\n        for (const [key, input] of Object.entries(formState)) {\n            if (input == \"\" || (!input.match(numbers) && !input.match(decimal))) {\n                return 0\n            }\n        }\n        postUserToapi()\n    }\n\n    async function postApi() {\n\n        if (csvdata != '') {\n            console.log(\"csvdata\" + csvdata);\n            PostCSVtoAPI()\n        } else {\n            userData();\n        }\n    }\n\n    return (\n        <div className=\"App\">\n\n            <div>\n                <ButtonAppBar/>\n            </div>\n            <Box>\n                <IconLabelButtons func={downloadSampleData}/>\n                <CSVReader\n                    cssClass=\"react-csv-input\"\n                    label=\"select .csv with liver disease symptoms: \"\n                    onFileLoaded={handleForce}\n                    parserOptions={papaparseOptions}\n                    inputStyle={{ opacity: 1, width: '170px', color: 'blue'}}\n                />\n                <p>select csv file or enter values manually and submit</p>\n            </Box>\n            <Box display=\"flex\" className={classes.root} flexWrap=\"wrap\">\n                <RadioButtonsGroup clicked={getGender}/>\n                <BasicTextFields label={data} getdata={getsymtoms} error={er}/>\n                <Button variant=\"contained\" color=\"primary\" onClick={postApi}>SUBMIT</Button>\n            </Box>\n\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"THANKS FOR USING OUR SITE\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        {value}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        okay\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}