{"ast":null,"code":"var _jsxFileName = \"D:\\\\python\\\\virtusa_frontend\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport BasicTextFields from './InputBox';\nimport ButtonAppBar from \"./appbar\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport RadioButtonsGroup from \"./radiobuttons\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    // backgroundColor: \"#ff1133\",\n    border: \"2px solid blue\",\n    backgroundColor: \"#ffffff\",\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: \"22%\",\n    shadowBlur: \"#2224FF\",\n    marginTop: \"5%\",\n    marginBottom: \"5%\",\n    marginRight: \"22%\",\n    borderRadius: 20,\n    padding: 30\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n  const state = data.reduce(function (map, obj) {\n    map[obj] = \"\";\n    return map;\n  }, {});\n\n  async function getsymtoms(key) {\n    state[key.target.id] = key.target.value;\n    console.log(state);\n  }\n\n  async function getGender(key) {\n    state[\"Gender\"] = key.target.value;\n  } // GET request using fetch inside useEffect React hook\n\n\n  async function getcolnames() {\n    const response = await fetch('http://127.0.0.1:8000/symptoms/', {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    setData(json['symptoms']);\n    console.log(json['symptoms']);\n  }\n\n  useEffect(() => {\n    // GET request using fetch inside useEffect React hook\n    getcolnames();\n  }, []); // POST request\n\n  async function posttoapi() {\n    console.log(state);\n    const response = await fetch('http://127.0.0.1:8000/predictdisease/', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"symptoms\": state\n      })\n    }).then(response => response.json()).catch(error => error);\n    console.log(response);\n  }\n\n  async function validation() {\n    for (const [key, value] of Object.entries(state)) {\n      if (value == \"\") {\n        alert(key + \" should not be empty and should be numeric\");\n        return 0;\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonAppBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    className: classes.root,\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RadioButtonsGroup, {\n    clicked: getGender,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(BasicTextFields, {\n    label: data,\n    getdata: getsymtoms,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: validation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"SUBMIT\")));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/python/virtusa_frontend/src/App.js"],"names":["React","useEffect","useState","BasicTextFields","ButtonAppBar","Box","makeStyles","createStyles","Button","RadioButtonsGroup","useStyles","theme","root","border","backgroundColor","display","alignItems","justifyContent","marginLeft","shadowBlur","marginTop","marginBottom","marginRight","borderRadius","padding","App","classes","data","setData","state","reduce","map","obj","getsymtoms","key","target","id","value","console","log","getGender","getcolnames","response","fetch","method","headers","json","posttoapi","body","JSON","stringify","then","catch","error","validation","Object","entries","alert"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport BasicTextFields from './InputBox'\nimport ButtonAppBar from \"./appbar\";\nimport Box from \"@material-ui/core/Box\";\nimport {makeStyles, createStyles} from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport RadioButtonsGroup from \"./radiobuttons\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    root: {\n        // backgroundColor: \"#ff1133\",\n        border: \"2px solid blue\",\n        backgroundColor: \"#ffffff\",\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginLeft: \"22%\",\n        shadowBlur: \"#2224FF\",\n        marginTop: \"5%\",\n        marginBottom: \"5%\",\n        marginRight: \"22%\",\n        borderRadius: 20,\n        padding: 30,\n    },\n}));\n\nfunction App() {\n\n    const classes = useStyles();\n    const [data, setData] = useState([]);\n\n    const state = data.reduce(function (map, obj) {\n        map[obj] = \"\";\n        return map;\n    }, {});\n\n    async function getsymtoms(key) {\n        state[key.target.id] = key.target.value;\n        console.log(state);\n    }\n\n    async function getGender(key)\n    {\n        state[\"Gender\"] = key.target.value;\n    }\n\n\n     // GET request using fetch inside useEffect React hook\n    async function getcolnames() {\n        const response = await fetch('http://127.0.0.1:8000/symptoms/',\n            {\n\n                method: \"GET\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n        const json = await response.json();\n        setData(json['symptoms']);\n        console.log(json['symptoms'])\n    }\n\n\n    useEffect(() => {\n        // GET request using fetch inside useEffect React hook\n        getcolnames()\n    }, []);\n\n\n    // POST request\n    async function posttoapi() {\n        console.log(state);\n        const response = await fetch('http://127.0.0.1:8000/predictdisease/',\n            {\n\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    \"symptoms\": state\n                })\n            }).then(response => response.json())\n            .catch(error => error);\n        console.log(response)\n    }\n\n\n    async function validation()\n    {\n        for (const [key, value] of Object.entries(state))\n        {\n            if(value == \"\"){\n                alert(key + \" should not be empty and should be numeric\")\n                return 0;\n            }\n        }\n\n    }\n\n\n    return (\n        <div className=\"App\">\n            <div>\n                <ButtonAppBar/>\n            </div>\n            <Box display=\"flex\" className={classes.root} flexWrap=\"wrap\">\n                <RadioButtonsGroup clicked={getGender}/>\n                <BasicTextFields label={data} getdata={getsymtoms}/>\n                <Button variant=\"contained\" color=\"primary\" onClick ={validation}>SUBMIT</Button>\n            </Box>\n\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}