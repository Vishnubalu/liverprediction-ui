{"ast":null,"code":"var _jsxFileName = \"D:\\\\python\\\\virtusa_frontend\\\\src\\\\upload.js\";\nimport React, { useState } from 'react';\nimport IconLabelButtons from \"./uploadicon\";\nimport CSVReader from \"react-csv-reader\";\nimport Box from \"@material-ui/core/Box\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nconst useStyles = makeStyles(theme => createStyles({\n  head: {\n    border: \"2px solid blue\",\n    min: \"10ch\",\n    backgroundColor: \"#ffffff\",\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: \"20%\",\n    shadowBlur: \"#2224FF\",\n    marginTop: \"15%\",\n    marginBottom: \"15%\",\n    marginRight: \"20%\",\n    borderRadius: 20,\n    padding: 30\n  }\n}));\n\nfunction Upload(props) {\n  const classes = useStyles();\n  const [result, setResult] = useState(true);\n  const [csvdata, setCSV] = useState('');\n  const [filename, setFile] = useState('');\n\n  const handleForce = (data, fileInfo) => (setCSV(data), setFile(fileInfo));\n\n  const papaparseOptions = {\n    header: true,\n    dynamicTyping: true,\n    skipEmptyLines: true,\n    transformHeader: header => header.toLowerCase().replace(/\\W/g, \"_\")\n  };\n\n  async function PostCSVtoAPI() {\n    // const csrf = this.getCookie('csrftoken');\n    const response = await fetch('http://127.0.0.1:8000/upload/', {\n      method: \"POST\",\n      //headers: {'Content-Type': 'multipart/form-data'},\n      body: JSON.stringify({\n        \"data\": csvdata,\n        \"filename\": filename\n      })\n    }).then(response => response.json()).catch(error => {\n      setValue(\"maybe symptoms are not matching, Please follow the SAMPLE format\");\n      setOpen(true);\n    });\n    var obj = JSON.parse(response);\n    setResult(obj[\"created\"]);\n    setValue(obj[\"result\"]);\n    setOpen(obj[\"open\"]);\n  }\n\n  async function downloadResult() {\n    setResult(true);\n    fetch('http://127.0.0.1:8000/result/').then(response => {\n      response.blob().then(blob => {\n        let url = window.URL.createObjectURL(blob);\n        let a = document.createElement('a');\n        a.href = url;\n      });\n      window.location.href = response.url;\n    });\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    className: classes.head,\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CSVReader, {\n    cssClass: \"react-csv-input\",\n    label: \"Upload file\",\n    onFileLoaded: handleForce,\n    parserOptions: papaparseOptions,\n    inputStyle: {\n      opacity: 1,\n      width: '170px',\n      color: 'blue'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(IconLabelButtons, {\n    func: downloadResult,\n    disabled: result,\n    label: \"Result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: validateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 16\n    }\n  }, \"SUBMIT\")));\n}\n\nexport default Upload;","map":{"version":3,"sources":["D:/python/virtusa_frontend/src/upload.js"],"names":["React","useState","IconLabelButtons","CSVReader","Box","createStyles","makeStyles","Button","useStyles","theme","head","border","min","backgroundColor","display","alignItems","justifyContent","marginLeft","shadowBlur","marginTop","marginBottom","marginRight","borderRadius","padding","Upload","props","classes","result","setResult","csvdata","setCSV","filename","setFile","handleForce","data","fileInfo","papaparseOptions","header","dynamicTyping","skipEmptyLines","transformHeader","toLowerCase","replace","PostCSVtoAPI","response","fetch","method","body","JSON","stringify","then","json","catch","error","setValue","setOpen","obj","parse","downloadResult","blob","url","window","URL","createObjectURL","a","document","createElement","href","location","opacity","width","color","validateUser"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,gBAAP,MAA6B,cAA7B;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAAQC,YAAR,EAAsBC,UAAtB,QAAuC,0BAAvC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAGA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,IAAWJ,YAAY,CAAC;AACjDK,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,EAAE,gBADN;AAEFC,IAAAA,GAAG,EAAE,MAFH;AAGFC,IAAAA,eAAe,EAAE,SAHf;AAIFC,IAAAA,OAAO,EAAE,MAJP;AAKFC,IAAAA,UAAU,EAAE,QALV;AAMFC,IAAAA,cAAc,EAAE,QANd;AAOFC,IAAAA,UAAU,EAAE,KAPV;AAQFC,IAAAA,UAAU,EAAE,SARV;AASFC,IAAAA,SAAS,EAAE,KATT;AAUFC,IAAAA,YAAY,EAAE,KAVZ;AAWFC,IAAAA,WAAW,EAAE,KAXX;AAYFC,IAAAA,YAAY,EAAE,EAZZ;AAaFC,IAAAA,OAAO,EAAE;AAbP;AAD2C,CAAD,CAAxB,CAA5B;;AAmBA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,QAAMC,OAAO,GAAGlB,SAAS,EAAzB;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAAC4B,OAAD,EAAUC,MAAV,IAAoB7B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC8B,QAAD,EAAWC,OAAX,IAAsB/B,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMgC,WAAW,GAAG,CAACC,IAAD,EAAOC,QAAP,MAAqBL,MAAM,CAACI,IAAD,CAAN,EAAcF,OAAO,CAACG,QAAD,CAA1C,CAApB;;AAEA,QAAMC,gBAAgB,GAAG;AACrBC,IAAAA,MAAM,EAAE,IADa;AAErBC,IAAAA,aAAa,EAAE,IAFM;AAGrBC,IAAAA,cAAc,EAAE,IAHK;AAIrBC,IAAAA,eAAe,EAAEH,MAAM,IAAIA,MAAM,CAACI,WAAP,GAAqBC,OAArB,CAA6B,KAA7B,EAAoC,GAApC;AAJN,GAAzB;;AAMA,iBAAeC,YAAf,GAA8B;AAC1B;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,EAAkC;AAC1DC,MAAAA,MAAM,EAAE,MADkD;AAE1D;AACAC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,gBAAQpB,OADS;AAEjB,oBAAYE;AAFK,OAAf;AAHoD,KAAlC,CAAL,CAQlBmB,IARkB,CAQZN,QAAD,IAAcA,QAAQ,CAACO,IAAT,EARD,EASlBC,KATkB,CASXC,KAAD,IAAW;AACdC,MAAAA,QAAQ,CAAC,kEAAD,CAAR;AACAC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAZkB,CAAvB;AAaA,QAAIC,GAAG,GAAGR,IAAI,CAACS,KAAL,CAAWb,QAAX,CAAV;AACAhB,IAAAA,SAAS,CAAC4B,GAAG,CAAC,SAAD,CAAJ,CAAT;AACAF,IAAAA,QAAQ,CAACE,GAAG,CAAC,QAAD,CAAJ,CAAR;AACAD,IAAAA,OAAO,CAACC,GAAG,CAAC,MAAD,CAAJ,CAAP;AACH;;AAED,iBAAeE,cAAf,GAAgC;AAC5B9B,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAiB,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACKK,IADL,CACUN,QAAQ,IAAI;AACdA,MAAAA,QAAQ,CAACe,IAAT,GAAgBT,IAAhB,CAAqBS,IAAI,IAAI;AACzB,YAAIC,GAAG,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BJ,IAA3B,CAAV;AACA,YAAIK,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAR;AACAF,QAAAA,CAAC,CAACG,IAAF,GAASP,GAAT;AACH,OAJD;AAKAC,MAAAA,MAAM,CAACO,QAAP,CAAgBD,IAAhB,GAAuBvB,QAAQ,CAACgB,GAAhC;AACH,KARL;AASH;;AAAA;AAGD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,SAAS,EAAElC,OAAO,CAAChB,IAAvC;AAA6C,IAAA,QAAQ,EAAC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,QAAQ,EAAC,iBADb;AAEI,IAAA,KAAK,EAAC,aAFV;AAGI,IAAA,YAAY,EAAEuB,WAHlB;AAII,IAAA,aAAa,EAAEG,gBAJnB;AAKI,IAAA,UAAU,EAAE;AAACiC,MAAAA,OAAO,EAAE,CAAV;AAAaC,MAAAA,KAAK,EAAE,OAApB;AAA6BC,MAAAA,KAAK,EAAE;AAApC,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAEb,cAAxB;AAAwC,IAAA,QAAQ,EAAE/B,MAAlD;AAA0D,IAAA,KAAK,EAAE,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAWG,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAE6C,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXH,CADJ,CADJ;AAkBH;;AAED,eAAehD,MAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport IconLabelButtons from \"./uploadicon\";\r\nimport CSVReader from \"react-csv-reader\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {createStyles, makeStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => createStyles({\r\n    head: {\r\n        border: \"2px solid blue\",\r\n        min: \"10ch\",\r\n        backgroundColor: \"#ffffff\",\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft: \"20%\",\r\n        shadowBlur: \"#2224FF\",\r\n        marginTop: \"15%\",\r\n        marginBottom: \"15%\",\r\n        marginRight: \"20%\",\r\n        borderRadius: 20,\r\n        padding: 30,\r\n    }\r\n\r\n}));\r\n\r\nfunction Upload(props) {\r\n    const classes = useStyles();\r\n    const [result, setResult] = useState(true);\r\n    const [csvdata, setCSV] = useState('');\r\n    const [filename, setFile] = useState('');\r\n    const handleForce = (data, fileInfo) => (setCSV(data), setFile(fileInfo));\r\n\r\n    const papaparseOptions = {\r\n        header: true,\r\n        dynamicTyping: true,\r\n        skipEmptyLines: true,\r\n        transformHeader: header => header.toLowerCase().replace(/\\W/g, \"_\")\r\n    };\r\n    async function PostCSVtoAPI() {\r\n        // const csrf = this.getCookie('csrftoken');\r\n        const response = await fetch('http://127.0.0.1:8000/upload/', {\r\n            method: \"POST\",\r\n            //headers: {'Content-Type': 'multipart/form-data'},\r\n            body: JSON.stringify({\r\n                \"data\": csvdata,\r\n                \"filename\": filename\r\n            })\r\n        })\r\n            .then((response) => response.json())\r\n            .catch((error) => {\r\n                setValue(\"maybe symptoms are not matching, Please follow the SAMPLE format\");\r\n                setOpen(true);\r\n            });\r\n        var obj = JSON.parse(response);\r\n        setResult(obj[\"created\"]);\r\n        setValue(obj[\"result\"]);\r\n        setOpen(obj[\"open\"]);\r\n    }\r\n\r\n    async function downloadResult() {\r\n        setResult(true);\r\n        fetch('http://127.0.0.1:8000/result/')\r\n            .then(response => {\r\n                response.blob().then(blob => {\r\n                    let url = window.URL.createObjectURL(blob);\r\n                    let a = document.createElement('a');\r\n                    a.href = url;\r\n                });\r\n                window.location.href = response.url;\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Box display=\"flex\" className={classes.head} flexWrap=\"wrap\">\r\n                <CSVReader\r\n                    cssClass=\"react-csv-input\"\r\n                    label=\"Upload file\"\r\n                    onFileLoaded={handleForce}\r\n                    parserOptions={papaparseOptions}\r\n                    inputStyle={{opacity: 1, width: '170px', color: 'blue'}}\r\n                />\r\n\r\n                <IconLabelButtons func={downloadResult} disabled={result} label={\"Result\"}/>\r\n\r\n               <Button variant=\"contained\" color=\"primary\" onClick={validateUser}>SUBMIT</Button>\r\n\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Upload;"]},"metadata":{},"sourceType":"module"}