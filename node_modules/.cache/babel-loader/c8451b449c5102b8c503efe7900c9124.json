{"ast":null,"code":"var _jsxFileName = \"D:\\\\python\\\\virtusa_frontend\\\\src\\\\main.js\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport CSVReader from \"react-csv-reader\";\nimport './App.css';\nimport BasicTextFields from './InputBox';\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport RadioButtonsGroup from \"./radiobuttons\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport IconLabelButtons from \"./uploadicon\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    // backgroundColor: \"#ff1133\",\n    border: \"2px solid blue\",\n    minWidth: \"27ch\",\n    backgroundColor: \"#ffffff\",\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: \"20%\",\n    shadowBlur: \"#2224FF\",\n    marginTop: \"1%\",\n    marginBottom: \"5%\",\n    marginRight: \"20%\",\n    borderRadius: 20,\n    padding: 30\n  },\n  head: {\n    border: \"2px solid blue\",\n    min: \"20ch\",\n    backgroundColor: \"#ffffff\",\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: \"20%\",\n    shadowBlur: \"#2224FF\",\n    marginTop: \"3%\",\n    marginBottom: \"1%\",\n    marginRight: \"20%\",\n    borderRadius: 20,\n    padding: 30\n  }\n}));\n\nfunction Main() {\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState([]);\n  const [er, setError] = useState({});\n  const [formState, setFormState] = useState({});\n  const [csvdata, setCSV] = useState('');\n  const [filename, setFile] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const [result, setResult] = useState(true);\n\n  const handleForce = (data, fileInfo) => (setCSV(data), setFile(fileInfo)); // const [disabled, setDisable] = useState(true);\n\n\n  const Transition = React.forwardRef(function Transition(props, ref) {\n    return /*#__PURE__*/React.createElement(Slide, Object.assign({\n      direction: \"up\",\n      ref: ref\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 16\n      }\n    }));\n  });\n  const papaparseOptions = {\n    header: true,\n    dynamicTyping: true,\n    skipEmptyLines: true,\n    transformHeader: header => header.toLowerCase().replace(/\\W/g, \"_\")\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function getsymtoms(key) {\n    const newErrors = { ...er\n    };\n    const newFormState = { ...formState\n    };\n    const decimal = /^[-+]?[0-9]+\\.[0-9]+$/;\n    const numbers = /^[0-9]+$/;\n\n    if (key.target.value.match(numbers) || key.target.value.match(decimal)) {\n      newErrors[key.target.id] = false;\n    } else {\n      newErrors[key.target.id] = true;\n    }\n\n    newFormState[key.target.id] = key.target.value;\n    setFormState(newFormState);\n    setError(newErrors); //console.log(\"updating ---\" + JSON.stringify(formState));\n  }\n\n  async function getGender(key) {\n    const newFormState = { ...formState\n    };\n    newFormState[\"Gender\"] = key.target.value;\n    setFormState(newFormState);\n  } // GET request using fetch inside useEffect React hook\n\n\n  async function getcolnames() {\n    const response = await fetch('http://127.0.0.1:8000/symptoms/', {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    setData(json['symptoms']);\n    const formData = json['symptoms'].reduce(function (map, obj) {\n      map[obj] = \"\";\n      return map;\n    }, {});\n    setFormState(formData);\n  }\n\n  async function downloadSampleData() {\n    fetch('http://127.0.0.1:8000/download/').then(response => {\n      response.blob().then(blob => {\n        let url = window.URL.createObjectURL(blob);\n        let a = document.createElement('a');\n        a.href = url;\n      });\n      window.location.href = response.url;\n    });\n  }\n\n  ;\n\n  async function downloadResult() {\n    setResult(true);\n    fetch('http://127.0.0.1:8000/result/').then(response => {\n      response.blob().then(blob => {\n        let url = window.URL.createObjectURL(blob);\n        let a = document.createElement('a');\n        a.href = url;\n      });\n      window.location.href = response.url;\n    });\n  }\n\n  ;\n  useEffect(() => {\n    // GET request using fetch inside useEffect React hook\n    getcolnames();\n  }, []); // POST request\n\n  async function postUserToapi() {\n    const response = await fetch('http://127.0.0.1:8000/predictdisease/', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"symptoms\": formState\n      })\n    }).then(response => response.json()).catch(error => error);\n    console.log(\"resp \" + response);\n    var obj = JSON.parse(response);\n    setValue(obj[\"messege\"]);\n    setOpen(true);\n  }\n\n  async function PostCSVtoAPI() {\n    // const csrf = this.getCookie('csrftoken');\n    const response = await fetch('http://127.0.0.1:8000/upload/', {\n      method: \"POST\",\n      //headers: {'Content-Type': 'multipart/form-data'},\n      body: JSON.stringify({\n        \"data\": csvdata,\n        \"filename\": filename\n      })\n    }).then(response => response.json()).catch(error => {\n      setValue(\"maybe symptoms are not matching, Please follow the SAMPLE format\");\n      setOpen(true);\n    });\n    var obj = JSON.parse(response);\n    setResult(obj[\"created\"]);\n    setValue(obj[\"result\"]);\n    setOpen(obj[\"open\"]);\n  }\n\n  async function validateUser() {\n    console.log('userdata');\n    const numbers = /^[0-9]+$/;\n    const decimal = /^[-+]?[0-9]+\\.[0-9]+$/;\n\n    for (const [key, input] of Object.entries(formState)) {\n      console.log(key);\n\n      if (input == \"\" || !input.match(numbers) && !input.match(decimal)) {\n        if (csvdata != '') {\n          PostCSVtoAPI();\n        }\n\n        return 0;\n      }\n    }\n\n    console.log(formState);\n    postUserToapi();\n  }\n\n  console.log(filename['name']);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    className: classes.root,\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RadioButtonsGroup, {\n    clicked: getGender,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(BasicTextFields, {\n    label: data,\n    getdata: getsymtoms,\n    error: er,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: validateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, \"SUBMIT\")), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-slide-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, \"THANKS FOR USING OUR SITE\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"alert-dialog-slide-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }, value)), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 21\n    }\n  }, \"okay\"))));\n}\n\nexport default Main;","map":{"version":3,"sources":["D:/python/virtusa_frontend/src/main.js"],"names":["React","useEffect","useMemo","useState","CSVReader","BasicTextFields","Box","makeStyles","createStyles","Button","RadioButtonsGroup","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","IconLabelButtons","useStyles","theme","root","border","minWidth","backgroundColor","display","alignItems","justifyContent","marginLeft","shadowBlur","marginTop","marginBottom","marginRight","borderRadius","padding","head","min","Main","classes","data","setData","value","setValue","er","setError","formState","setFormState","csvdata","setCSV","filename","setFile","open","setOpen","result","setResult","handleForce","fileInfo","Transition","forwardRef","props","ref","papaparseOptions","header","dynamicTyping","skipEmptyLines","transformHeader","toLowerCase","replace","handleClose","getsymtoms","key","newErrors","newFormState","decimal","numbers","target","match","id","getGender","getcolnames","response","fetch","method","headers","json","formData","reduce","map","obj","downloadSampleData","then","blob","url","window","URL","createObjectURL","a","document","createElement","href","location","downloadResult","postUserToapi","body","JSON","stringify","catch","error","console","log","parse","PostCSVtoAPI","validateUser","input","Object","entries"],"mappings":"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","sourcesContent":["import React, {useEffect, useMemo, useState} from 'react';\r\nimport CSVReader from \"react-csv-reader\";\r\nimport './App.css';\r\nimport BasicTextFields from './InputBox'\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {makeStyles, createStyles} from '@material-ui/core/styles';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport RadioButtonsGroup from \"./radiobuttons\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport IconLabelButtons from \"./uploadicon\";\r\n\r\nconst useStyles = makeStyles((theme) => createStyles({\r\n    root: {\r\n        // backgroundColor: \"#ff1133\",\r\n        border: \"2px solid blue\",\r\n        minWidth: \"27ch\",\r\n        backgroundColor: \"#ffffff\",\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft: \"20%\",\r\n        shadowBlur: \"#2224FF\",\r\n        marginTop: \"1%\",\r\n        marginBottom: \"5%\",\r\n        marginRight: \"20%\",\r\n        borderRadius: 20,\r\n        padding: 30,\r\n    },\r\n    head: {\r\n        border: \"2px solid blue\",\r\n        min: \"20ch\",\r\n        backgroundColor: \"#ffffff\",\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft: \"20%\",\r\n        shadowBlur: \"#2224FF\",\r\n        marginTop: \"3%\",\r\n        marginBottom: \"1%\",\r\n        marginRight: \"20%\",\r\n        borderRadius: 20,\r\n        padding: 30,\r\n    }\r\n\r\n}));\r\n\r\n\r\nfunction Main() {\r\n\r\n\r\n    const classes = useStyles();\r\n    const [data, setData] = useState([]);\r\n    const [value, setValue] = useState([]);\r\n    const [er, setError] = useState({});\r\n    const [formState, setFormState] = useState({});\r\n    const [csvdata, setCSV] = useState('');\r\n    const [filename, setFile] = useState('');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [result, setResult] = useState(true);\r\n    const handleForce = (data, fileInfo) => (setCSV(data), setFile(fileInfo));\r\n\r\n    // const [disabled, setDisable] = useState(true);\r\n\r\n    const Transition = React.forwardRef(function Transition(props, ref) {\r\n        return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\n    const papaparseOptions = {\r\n        header: true,\r\n        dynamicTyping: true,\r\n        skipEmptyLines: true,\r\n        transformHeader: header => header.toLowerCase().replace(/\\W/g, \"_\")\r\n    };\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    function getsymtoms(key) {\r\n        const newErrors = {...er};\r\n        const newFormState = {...formState};\r\n        const decimal = /^[-+]?[0-9]+\\.[0-9]+$/;\r\n        const numbers = /^[0-9]+$/;\r\n        if (key.target.value.match(numbers) || key.target.value.match(decimal)) {\r\n            newErrors[key.target.id] = false;\r\n        } else {\r\n            newErrors[key.target.id] = true;\r\n        }\r\n        newFormState[key.target.id] = key.target.value;\r\n        setFormState(newFormState);\r\n        setError(newErrors);\r\n        //console.log(\"updating ---\" + JSON.stringify(formState));\r\n    }\r\n\r\n\r\n    async function getGender(key) {\r\n        const newFormState = {...formState};\r\n        newFormState[\"Gender\"] = key.target.value;\r\n        setFormState(newFormState);\r\n    }\r\n\r\n\r\n    // GET request using fetch inside useEffect React hook\r\n    async function getcolnames() {\r\n        const response = await fetch('http://127.0.0.1:8000/symptoms/',\r\n            {\r\n                method: \"GET\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            });\r\n        const json = await response.json();\r\n        setData(json['symptoms']);\r\n        const formData = json['symptoms'].reduce(function (map, obj) {\r\n            map[obj] = \"\";\r\n            return map;\r\n        }, {});\r\n        setFormState(formData)\r\n    }\r\n    async function downloadSampleData() {\r\n        fetch('http://127.0.0.1:8000/download/')\r\n            .then(response => {\r\n                response.blob().then(blob => {\r\n                    let url = window.URL.createObjectURL(blob);\r\n                    let a = document.createElement('a');\r\n                    a.href = url;\r\n                });\r\n                window.location.href = response.url;\r\n            });\r\n    };\r\n    async function downloadResult() {\r\n        setResult(true);\r\n        fetch('http://127.0.0.1:8000/result/')\r\n            .then(response => {\r\n                response.blob().then(blob => {\r\n                    let url = window.URL.createObjectURL(blob);\r\n                    let a = document.createElement('a');\r\n                    a.href = url;\r\n                });\r\n                window.location.href = response.url;\r\n            });\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        // GET request using fetch inside useEffect React hook\r\n        getcolnames();\r\n\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    // POST request\r\n    async function postUserToapi() {\r\n        const response = await fetch('http://127.0.0.1:8000/predictdisease/',\r\n            {\r\n\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"symptoms\": formState\r\n                })\r\n\r\n            }).then(response => response.json())\r\n            .catch(error => error);\r\n\r\n        console.log(\"resp \" + response);\r\n        var obj = JSON.parse(response);\r\n        setValue(obj[\"messege\"]);\r\n        setOpen(true);\r\n    }\r\n    async function PostCSVtoAPI() {\r\n        // const csrf = this.getCookie('csrftoken');\r\n        const response = await fetch('http://127.0.0.1:8000/upload/', {\r\n            method: \"POST\",\r\n            //headers: {'Content-Type': 'multipart/form-data'},\r\n            body: JSON.stringify({\r\n                \"data\": csvdata,\r\n                \"filename\": filename\r\n            })\r\n        })\r\n            .then((response) => response.json())\r\n            .catch((error) => {\r\n                setValue(\"maybe symptoms are not matching, Please follow the SAMPLE format\");\r\n                setOpen(true);\r\n            });\r\n        var obj = JSON.parse(response);\r\n        setResult(obj[\"created\"]);\r\n        setValue(obj[\"result\"]);\r\n        setOpen(obj[\"open\"]);\r\n    }\r\n\r\n    async function validateUser() {\r\n        console.log('userdata');\r\n        const numbers = /^[0-9]+$/;\r\n        const decimal = /^[-+]?[0-9]+\\.[0-9]+$/\r\n        for (const [key, input] of Object.entries(formState)) {\r\n            console.log(key);\r\n            if (input == \"\" || (!input.match(numbers) && !input.match(decimal))) {\r\n                if (csvdata != '') {\r\n                    PostCSVtoAPI()\r\n                }\r\n                return 0\r\n            }\r\n        }\r\n        console.log(formState);\r\n        postUserToapi()\r\n    }\r\n\r\n    console.log(filename['name']);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <Box display=\"flex\" className={classes.root} flexWrap=\"wrap\">\r\n                <RadioButtonsGroup clicked={getGender}/>\r\n                <BasicTextFields label={data} getdata={getsymtoms} error={er}/>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={validateUser}>SUBMIT</Button>\r\n            </Box>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"THANKS FOR USING OUR SITE\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        {value}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        okay\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}